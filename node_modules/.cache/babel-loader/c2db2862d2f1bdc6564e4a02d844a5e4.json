{"ast":null,"code":"var _jsxFileName = \"/var/www/html/to-do-list/src/Components/ListCards.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport moment from 'moment';\nimport ReactTooltip from 'react-tooltip';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport { lighten } from '@material-ui/core';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Avatar from 'react-avatar';\nimport FamilyIcon from \"../images/svg/icons8-family-100.svg\";\nimport SvgIcon from '@material-ui/core/SvgIcon';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: \"100%\",\n    marginBottom: \"10px\",\n    alignItems: \"center\"\n  },\n  root: {\n    padding: \" 1rem 1.5rem\",\n    borderRadius: \"10px\",\n    margin: \"10px 0\",\n    // display: \"flex\",\n    alignItems: \"center\",\n    background: \"#fff\",\n    boxShadow: \"0 0 1px rgba(0, 0, 0, 0.13), 0 1px 3px rgba(0, 0, 0, 0.26)\",\n    transition: 'all 400ms ease',\n    '&:hover': {\n      cursor: 'pointer',\n      transition: 'all 400ms ease',\n      background: `linear-gradient(\n                90deg,\n                ${lighten(theme.palette.primary.main, 0.5)} 0%,\n                #fff 80.96%\n              )`\n    }\n  },\n  title: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\",\n    lineHeight: \"1.6\",\n    transition: \"all 900ms ease\"\n  },\n  subTitle: {\n    fontStyle: \"0.85rem\",\n    color: \"darken(30%)\",\n    transition: \"all 900ms ease\"\n  },\n  content: {\n    textAlign: \"left\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    marginLeft: \"15px\",\n    float: \"left\"\n  },\n  avtar: {\n    fontSize: \"50px\",\n    float: \"left\" //  borderRadius : \"50%\"\n\n  },\n  whenTime: {\n    // clear : \"both\",\n    fontSize: \"13px\",\n    float: \"right\"\n  },\n  cardActions: {\n    float: \"right\"\n  }\n}));\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const tabType = props.tabType;\n  const todoSearchFor = props.state.todoSearchFor;\n\n  function returnIcon(drpdTodoType) {\n    let returnIcon = React.createElement(BusinessIcon, {\n      className: classes.avtar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    });\n\n    if (drpdTodoType == \"work\") {\n      returnIcon = React.createElement(WorkIcon, {\n        className: classes.avtar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    } else if (drpdTodoType == \"family\") {\n      returnIcon = React.createElement(\"img\", {\n        src: FamilyIcon,\n        width: 50,\n        height: 50,\n        className: classes.avtar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    } else if (drpdTodoType == \"personal\") {\n      returnIcon = React.createElement(PermIdentityIcon, {\n        className: classes.avtar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n\n    return returnIcon;\n  }\n\n  function getDataBasedOnRequestType(tabType, todoSearchFor) {\n    const dateFormat = \"DD/MM/YYYY\";\n    let tabTypeBasedData = tabType == 'all' ? props.state.allTodoData : props.state.allTodoData.filter(obj => obj.todoType === tabType);\n\n    if (todoSearchFor == \"today\") {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(obj.txtWhen).format(dateFormat) == moment().format(dateFormat));\n    } else if (todoSearchFor == \"upcoming\") {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(moment(obj.txtWhen), \"DD/MM/YYYY\") > moment(moment(), \"DD/MM/YYYY\"));\n    } else {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(moment(obj.txtWhen), \"DD/MM/YYYY\") < moment(moment(), \"DD/MM/YYYY\"));\n    }\n\n    return tabTypeBasedData;\n  } // console.log(getDataBasedOnRequestType(tabType, todoSearchFor));\n\n\n  const tabTypeBasedData = getDataBasedOnRequestType(tabType, todoSearchFor); // console.log(tabTypeBasedData);\n  // return false;\n\n  if (tabTypeBasedData.length > 0) {\n    const count = props.count;\n    console.log(props);\n    return (//Looping through all data\n      //props.state.allTodoData.map((item, index) =>\n      tabTypeBasedData.map((item, index) => React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        key: index.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, returnIcon(item.drpdTodoType), React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, item.txtWhatToDo), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, item.txtWhereToDo)), React.createElement(\"div\", {\n        className: classes.cardActions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        size: \"small\",\n        onClick: () => props.handleChangeTodoStatus(item.todoType, item.counterId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, item.todoType === 'active' ? React.createElement(CheckIcon, {\n        color: \"primary\",\n        \"data-for\": \"handleChangeTodoStatus\",\n        \"data-tip\": \"Complete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }) : React.createElement(UndoIcon, {\n        color: \"primary\",\n        \"data-for\": \"handleChangeTodoStatus\",\n        \"data-tip\": \"Undo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        size: \"small\",\n        color: \"secondary\",\n        onClick: () => props.handleRemoval(item.counterId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        \"data-for\": \"handleChangeTodoStatus\",\n        \"data-tip\": \"Delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(ReactTooltip, {\n        place: \"bottom\",\n        id: \"handleChangeTodoStatus\",\n        getContent: dataTip => `${dataTip}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          clear: \"both\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.whenTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, item.txtWhenDiffFormat))))\n    );\n  }\n\n  return React.createElement(NoDataFound, {\n    tabType: tabType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/var/www/html/to-do-list/src/Components/ListCards.js"],"names":["React","useState","makeStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","DeleteIcon","CheckIcon","NoDataFound","IconButton","UndoIcon","moment","ReactTooltip","BusinessIcon","WorkIcon","PermIdentityIcon","lighten","CardMedia","EventNoteIcon","Avatar","SvgIcon","useStyles","theme","card","maxWidth","marginBottom","alignItems","root","padding","borderRadius","margin","background","boxShadow","transition","cursor","palette","primary","main","title","fontSize","fontWeight","lineHeight","subTitle","fontStyle","color","content","textAlign","flex","overflow","display","justifyContent","flexDirection","marginLeft","float","avtar","whenTime","cardActions","ImgMediaCard","props","classes","tabType","todoSearchFor","state","returnIcon","drpdTodoType","FamilyIcon","getDataBasedOnRequestType","dateFormat","tabTypeBasedData","allTodoData","filter","obj","todoType","txtWhen","format","length","count","console","log","map","item","index","toString","txtWhatToDo","txtWhereToDo","handleChangeTodoStatus","counterId","handleRemoval","dataTip","clear","txtWhenDiffFormat"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport moment from 'moment';\nimport ReactTooltip from 'react-tooltip';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport {lighten} from '@material-ui/core'\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Avatar from 'react-avatar';\nimport FamilyIcon from '../images/svg/icons8-family-100.svg';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        maxWidth: \"100%\",\n        marginBottom: \"10px\",\n        alignItems: \"center\",\n    },\n    root: {\n        padding: \" 1rem 1.5rem\",\n        borderRadius: \"10px\",\n        margin: \"10px 0\",\n        // display: \"flex\",\n        alignItems: \"center\",\n        background: \"#fff\",\n        boxShadow: \"0 0 1px rgba(0, 0, 0, 0.13), 0 1px 3px rgba(0, 0, 0, 0.26)\",\n        transition : 'all 400ms ease',\n        '&:hover' : {\n            cursor : 'pointer',\n            transition : 'all 400ms ease',\n            background: `linear-gradient(\n                90deg,\n                ${lighten(theme.palette.primary.main, 0.5)} 0%,\n                #fff 80.96%\n              )`\n        }\n    },\n    title: {\n        fontSize: \"1rem\",\n        fontWeight: \"500\",\n        lineHeight: \"1.6\",\n        transition: \"all 900ms ease\",\n    },\n\n    subTitle: {\n        fontStyle: \"0.85rem\",\n        color: \"darken(30%)\",\n        transition: \"all 900ms ease\",\n    },\n    content : {\n        textAlign: \"left\",\n        flex: \"1 1 auto\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        marginLeft: \"15px\",\n        float : \"left\"\n      },\n     avtar : {\n         fontSize : \"50px\",\n         float : \"left\"\n        //  borderRadius : \"50%\"\n     }, \n     whenTime : {\n        // clear : \"both\",\n        fontSize : \"13px\",\n        float : \"right\"\n     },\n     cardActions : {\n         float : \"right\"\n     }\n     \n}));\n\n\nexport default function ImgMediaCard(props) {\n\n    const classes = useStyles();\n    const { tabType } = props;\n    const { todoSearchFor } = props.state;\n\n\n    function returnIcon(drpdTodoType) {\n\n        let returnIcon = <BusinessIcon className = {classes.avtar}/>;\n        if(drpdTodoType == \"work\") {\n            returnIcon = <WorkIcon className = {classes.avtar}/>;\n        } else if (drpdTodoType == \"family\") {\n            returnIcon = <img src={FamilyIcon} width={50} height={50} className = {classes.avtar}/>; \n        }  else if (drpdTodoType == \"personal\") {\n            returnIcon = <PermIdentityIcon className = {classes.avtar}/>;\n        }\n        return returnIcon;\n    }\n\n    function getDataBasedOnRequestType(tabType, todoSearchFor) {\n\n        const dateFormat = \"DD/MM/YYYY\";\n        let tabTypeBasedData = (tabType == 'all') ? props.state.allTodoData : props.state.allTodoData.filter((obj) => obj.todoType === tabType);\n        if (todoSearchFor == \"today\") {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(obj.txtWhen).format(dateFormat) == moment().format(dateFormat));\n        } else if (todoSearchFor == \"upcoming\") {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(moment(obj.txtWhen),\"DD/MM/YYYY\") > moment(moment(),\"DD/MM/YYYY\"));\n        } else {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(moment(obj.txtWhen),\"DD/MM/YYYY\") < moment(moment(),\"DD/MM/YYYY\"));\n        }\n         return tabTypeBasedData;\n    }\n\n   // console.log(getDataBasedOnRequestType(tabType, todoSearchFor));\n    const tabTypeBasedData = getDataBasedOnRequestType(tabType, todoSearchFor);\n\n    // console.log(tabTypeBasedData);\n    // return false;\n    if (tabTypeBasedData.length > 0) {\n\n        const { count } = props;\n        console.log(props);\n\n        return (\n            //Looping through all data\n            //props.state.allTodoData.map((item, index) =>\n            tabTypeBasedData.map((item, index) =>\n                <Grid item xs={12} md={12} key={index.toString()}>\n                     <div className={classes.root}>\n                            \n                                {returnIcon(item.drpdTodoType)}\n\n                                <div className= {classes.content}>\n                                    <Typography  gutterBottom variant=\"h5\" component=\"h2\">\n                                        {item.txtWhatToDo} \n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {item.txtWhereToDo}\n                                    </Typography>\n                                </div>\n                                <div className = {classes.cardActions}>\n                                <IconButton size=\"small\"\n                                    onClick={()=> props.handleChangeTodoStatus(item.todoType,item.counterId)}\n                                >\n                                    {item.todoType === 'active' ? <CheckIcon color=\"primary\" data-for='handleChangeTodoStatus' data-tip='Complete'/> : <UndoIcon color=\"primary\" data-for='handleChangeTodoStatus' data-tip='Undo'/> }\n                                </IconButton>\n                                <IconButton size=\"small\" color=\"secondary\"\n                                    onClick={()=> props.handleRemoval(item.counterId)}\n                                >\n                                    <DeleteIcon data-for='handleChangeTodoStatus' data-tip='Delete'/>\n                                </IconButton>\n                                <ReactTooltip place=\"bottom\" id='handleChangeTodoStatus' getContent={(dataTip) => `${dataTip}`}/>\n                                </div>\n                                <div style = {{clear : \"both\"}}></div>\n                                <div className = {classes.whenTime}>\n                                    {item.txtWhenDiffFormat}\n                                </div>\n                     </div>\n                </Grid>\n            )\n        );\n    }\n    return <NoDataFound tabType={tabType} />;\n}\n"]},"metadata":{},"sourceType":"module"}