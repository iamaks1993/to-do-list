{"ast":null,"code":"var _jsxFileName = \"/var/www/html/to-do-list/src/Components/ListCards.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport moment from 'moment';\nimport ReactTooltip from 'react-tooltip';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport { lighten } from '@material-ui/core';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Avatar from 'react-avatar';\nimport FamilyIcon from \"../images/svg/icons8-family-100.svg\";\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: \"100%\",\n    marginBottom: \"10px\",\n    alignItems: \"center\"\n  },\n  root: {\n    padding: \" 1rem 1.5rem\",\n    borderRadius: \"10px\",\n    margin: \"10px 0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"#fff\",\n    boxShadow: \"0 0 1px rgba(0, 0, 0, 0.13), 0 1px 3px rgba(0, 0, 0, 0.26)\",\n    transition: 'all 400ms ease',\n    '&:hover': {\n      cursor: 'pointer',\n      transition: 'all 400ms ease',\n      background: `linear-gradient(\n                90deg,\n                ${lighten(theme.palette.primary.main, 0.5)} 0%,\n                #fff 80.96%\n              )`\n    }\n  },\n  title: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\",\n    lineHeight: \"1.6\",\n    transition: \"all 900ms ease\"\n  },\n  subTitle: {\n    fontStyle: \"0.85rem\",\n    color: \"darken(30%)\",\n    transition: \"all 900ms ease\"\n  },\n  content: {\n    textAlign: \"left\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    marginLeft: \"15px\"\n  },\n  avtar: {\n    fontSize: \"50px\" //  borderRadius : \"50%\"\n\n  },\n  whenTime: {\n    // clear : \"both\",\n    fontSize: \"13px\"\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const tabType = props.tabType;\n  const todoSearchFor = props.state.todoSearchFor;\n\n  function returnIcon(drpdTodoType) {\n    let returnIcon = React.createElement(BusinessIcon, {\n      className: classes.avtar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    });\n\n    if (drpdTodoType == \"work\") {\n      returnIcon = React.createElement(WorkIcon, {\n        className: classes.avtar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    } else if (drpdTodoType == \"family\") {\n      returnIcon = React.createElement(\"img\", {\n        src: FamilyIcon,\n        width: 50,\n        height: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    } else if (drpdTodoType == \"personal\") {\n      returnIcon = React.createElement(PermIdentityIcon, {\n        className: classes.avtar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    }\n\n    return returnIcon;\n  }\n\n  function getDataBasedOnRequestType(tabType, todoSearchFor) {\n    const dateFormat = \"DD/MM/YYYY\";\n    let tabTypeBasedData = tabType == 'all' ? props.state.allTodoData : props.state.allTodoData.filter(obj => obj.todoType === tabType);\n\n    if (todoSearchFor == \"today\") {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(obj.txtWhen).format(dateFormat) == moment().format(dateFormat));\n    } else if (todoSearchFor == \"upcoming\") {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(moment(obj.txtWhen), \"DD/MM/YYYY\") > moment(moment(), \"DD/MM/YYYY\"));\n    } else {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(moment(obj.txtWhen), \"DD/MM/YYYY\") < moment(moment(), \"DD/MM/YYYY\"));\n    }\n\n    return tabTypeBasedData;\n  } // console.log(getDataBasedOnRequestType(tabType, todoSearchFor));\n\n\n  const tabTypeBasedData = getDataBasedOnRequestType(tabType, todoSearchFor); // console.log(tabTypeBasedData);\n  // return false;\n\n  if (tabTypeBasedData.length > 0) {\n    const count = props.count;\n    console.log(props);\n    return (//Looping through all data\n      //props.state.allTodoData.map((item, index) =>\n      tabTypeBasedData.map((item, index) => // <Grid item xs={12} md={12} key={index.toString()}>\n      React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        key: index.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, returnIcon(item.drpdTodoType)), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, item.txtWhatToDo), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, item.txtWhereToDo)), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"item\"))) // </Grid>\n      )\n    );\n  }\n\n  return React.createElement(NoDataFound, {\n    tabType: tabType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/var/www/html/to-do-list/src/Components/ListCards.js"],"names":["React","useState","makeStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","DeleteIcon","CheckIcon","NoDataFound","IconButton","UndoIcon","moment","ReactTooltip","BusinessIcon","WorkIcon","PermIdentityIcon","lighten","CardMedia","EventNoteIcon","Avatar","SvgIcon","Paper","useStyles","theme","card","maxWidth","marginBottom","alignItems","root","padding","borderRadius","margin","display","background","boxShadow","transition","cursor","palette","primary","main","title","fontSize","fontWeight","lineHeight","subTitle","fontStyle","color","content","textAlign","flex","overflow","justifyContent","flexDirection","marginLeft","avtar","whenTime","paper","spacing","text","secondary","ImgMediaCard","props","classes","tabType","todoSearchFor","state","returnIcon","drpdTodoType","FamilyIcon","getDataBasedOnRequestType","dateFormat","tabTypeBasedData","allTodoData","filter","obj","todoType","txtWhen","format","length","count","console","log","map","item","index","toString","txtWhatToDo","txtWhereToDo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport moment from 'moment';\nimport ReactTooltip from 'react-tooltip';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport { lighten } from '@material-ui/core'\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Avatar from 'react-avatar';\nimport FamilyIcon from '../images/svg/icons8-family-100.svg';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        maxWidth: \"100%\",\n        marginBottom: \"10px\",\n        alignItems: \"center\",\n    },\n    root: {\n        padding: \" 1rem 1.5rem\",\n        borderRadius: \"10px\",\n        margin: \"10px 0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: \"#fff\",\n        boxShadow: \"0 0 1px rgba(0, 0, 0, 0.13), 0 1px 3px rgba(0, 0, 0, 0.26)\",\n        transition: 'all 400ms ease',\n        '&:hover': {\n            cursor: 'pointer',\n            transition: 'all 400ms ease',\n            background: `linear-gradient(\n                90deg,\n                ${lighten(theme.palette.primary.main, 0.5)} 0%,\n                #fff 80.96%\n              )`\n        }\n    },\n\n\n    title: {\n        fontSize: \"1rem\",\n        fontWeight: \"500\",\n        lineHeight: \"1.6\",\n        transition: \"all 900ms ease\",\n    },\n\n    subTitle: {\n        fontStyle: \"0.85rem\",\n        color: \"darken(30%)\",\n        transition: \"all 900ms ease\",\n    },\n    content: {\n        textAlign: \"left\",\n        flex: \"1 1 auto\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        marginLeft: \"15px\",\n    },\n    avtar: {\n        fontSize: \"50px\",\n        //  borderRadius : \"50%\"\n    },\n    whenTime: {\n        // clear : \"both\",\n        fontSize: \"13px\",\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }\n\n}));\n\n\nexport default function ImgMediaCard(props) {\n\n    const classes = useStyles();\n    const { tabType } = props;\n    const { todoSearchFor } = props.state;\n\n\n    function returnIcon(drpdTodoType) {\n\n        let returnIcon = <BusinessIcon className={classes.avtar} />;\n        if (drpdTodoType == \"work\") {\n            returnIcon = <WorkIcon className={classes.avtar} />;\n        } else if (drpdTodoType == \"family\") {\n            returnIcon = <img src={FamilyIcon} width={50} height={50} />;\n        } else if (drpdTodoType == \"personal\") {\n            returnIcon = <PermIdentityIcon className={classes.avtar} />;\n        }\n        return returnIcon;\n    }\n\n    function getDataBasedOnRequestType(tabType, todoSearchFor) {\n\n        const dateFormat = \"DD/MM/YYYY\";\n        let tabTypeBasedData = (tabType == 'all') ? props.state.allTodoData : props.state.allTodoData.filter((obj) => obj.todoType === tabType);\n        if (todoSearchFor == \"today\") {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(obj.txtWhen).format(dateFormat) == moment().format(dateFormat));\n        } else if (todoSearchFor == \"upcoming\") {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(moment(obj.txtWhen), \"DD/MM/YYYY\") > moment(moment(), \"DD/MM/YYYY\"));\n        } else {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(moment(obj.txtWhen), \"DD/MM/YYYY\") < moment(moment(), \"DD/MM/YYYY\"));\n        }\n        return tabTypeBasedData;\n    }\n\n    // console.log(getDataBasedOnRequestType(tabType, todoSearchFor));\n    const tabTypeBasedData = getDataBasedOnRequestType(tabType, todoSearchFor);\n\n    // console.log(tabTypeBasedData);\n    // return false;\n    if (tabTypeBasedData.length > 0) {\n\n        const { count } = props;\n        console.log(props);\n\n        return (\n            //Looping through all data\n            //props.state.allTodoData.map((item, index) =>\n            tabTypeBasedData.map((item, index) =>\n                // <Grid item xs={12} md={12} key={index.toString()}>\n\n                    <Grid container item xs={12} spacing={3} key={index.toString()}>\n                        <Grid item xs={3}>\n                                {returnIcon(item.drpdTodoType)}\n                        </Grid>\n                        <Grid item xs={4}>\n                                <Typography  gutterBottom variant=\"h5\" component=\"h2\">\n                                        {item.txtWhatToDo} \n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {item.txtWhereToDo}\n                                    </Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Paper className={classes.paper}>item</Paper>\n                        </Grid>\n                    </Grid>\n\n                // </Grid>\n            )\n        );\n    }\n    return <NoDataFound tabType={tabType} />;\n}\n"]},"metadata":{},"sourceType":"module"}