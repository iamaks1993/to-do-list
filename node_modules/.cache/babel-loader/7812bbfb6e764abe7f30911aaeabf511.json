{"ast":null,"code":"var _jsxFileName = \"/var/www/html/to-do-list/src/Components/ListCards.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport moment from 'moment';\nimport ReactTooltip from 'react-tooltip';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Avatar from 'react-avatar';\nimport styles from './ListCards.css';\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  root: {\n    padding: \" 1rem 1.5rem\",\n    borderRadius: \"10px\",\n    margin: \"10px 0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"#fff\",\n    boxShadow: \"0 0 1px rgba(0, 0, 0, 0.13), 0 1px 3px rgba(0, 0, 0, 0.26)\"\n  },\n  title: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\",\n    lineHeight: \"1.6\",\n    transition: \"all 900ms ease\"\n  },\n  subTitle: {\n    fontStyle: \"0.85rem\",\n    color: \"darken(30%)\",\n    transition: \"all 900ms ease\"\n  },\n  content: {\n    textAlign: \"left\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    marginLeft: \"15px\"\n  }\n});\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n  const tabType = props.tabType;\n  const todoSearchFor = props.state.todoSearchFor;\n\n  function getDataBasedOnRequestType(tabType, todoSearchFor) {\n    const dateFormat = \"DD/MM/YYYY\";\n    let tabTypeBasedData = tabType == 'all' ? props.state.allTodoData : props.state.allTodoData.filter(obj => obj.todoType === tabType);\n\n    if (todoSearchFor == \"today\") {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(obj.txtWhen).format(dateFormat) == moment().format(\"DD/MM/YYYY\"));\n    } else if (todoSearchFor == \"upcoming\") {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(obj.txtWhen).format(dateFormat) > moment().format(\"DD/MM/YYYY\"));\n    } else {\n      tabTypeBasedData = tabTypeBasedData.filter(obj => moment(obj.txtWhen).format(dateFormat) < moment().format(\"DD/MM/YYYY\"));\n    }\n\n    return tabTypeBasedData;\n  } //console.log(getDataBasedOnRequestType(tabType,todoSearchFor));\n\n\n  const tabTypeBasedData = getDataBasedOnRequestType(tabType, todoSearchFor);\n\n  if (tabTypeBasedData.length > 0) {\n    const count = props.count;\n    console.log(props);\n    return (//Looping through all data\n      //props.state.allTodoData.map((item, index) =>\n      tabTypeBasedData.map((item, index) => React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        key: index.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(BusinessIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, item.txtWhatToDo), React.createElement(\"div\", {\n        className: classes.subTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, item.txtWhereToDo)))))\n    );\n  }\n\n  return React.createElement(NoDataFound, {\n    tabType: tabType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/var/www/html/to-do-list/src/Components/ListCards.js"],"names":["React","useState","makeStyles","Card","CardActionArea","CardActions","CardContent","Button","Typography","Grid","DeleteIcon","CheckIcon","NoDataFound","IconButton","UndoIcon","moment","ReactTooltip","BusinessIcon","WorkIcon","PermIdentityIcon","CardMedia","EventNoteIcon","Avatar","styles","useStyles","card","maxWidth","marginBottom","root","padding","borderRadius","margin","display","alignItems","background","boxShadow","title","fontSize","fontWeight","lineHeight","transition","subTitle","fontStyle","color","content","textAlign","flex","overflow","justifyContent","flexDirection","marginLeft","ImgMediaCard","props","classes","tabType","todoSearchFor","state","getDataBasedOnRequestType","dateFormat","tabTypeBasedData","allTodoData","filter","obj","todoType","txtWhen","format","length","count","console","log","map","item","index","toString","txtWhatToDo","txtWhereToDo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NoDataFound from './TabNoDataFound';\nimport { IconButton } from '@material-ui/core';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport moment from 'moment';\nimport ReactTooltip from 'react-tooltip';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\n\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Avatar from 'react-avatar';\n\nimport styles from './ListCards.css';\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: \"100%\",\n        marginBottom: \"10px\"\n    },\n    root: {\n        padding: \" 1rem 1.5rem\",\n        borderRadius: \"10px\",\n        margin: \"10px 0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: \"#fff\",\n        boxShadow: \"0 0 1px rgba(0, 0, 0, 0.13), 0 1px 3px rgba(0, 0, 0, 0.26)\",\n    },\n\n\n    title: {\n        fontSize: \"1rem\",\n        fontWeight: \"500\",\n        lineHeight: \"1.6\",\n        transition: \"all 900ms ease\",\n    },\n\n    subTitle: {\n        fontStyle: \"0.85rem\",\n        color: \"darken(30%)\",\n        transition: \"all 900ms ease\",\n    },\n    content : {\n        textAlign: \"left\",\n        flex: \"1 1 auto\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        marginLeft: \"15px\",\n      }\n});\n\nexport default function ImgMediaCard(props) {\n\n    const classes = useStyles();\n    const { tabType } = props;\n    const { todoSearchFor } = props.state;\n\n    function getDataBasedOnRequestType(tabType, todoSearchFor) {\n\n        const dateFormat = \"DD/MM/YYYY\";\n        let tabTypeBasedData = (tabType == 'all') ? props.state.allTodoData : props.state.allTodoData.filter((obj) => obj.todoType === tabType);\n        if (todoSearchFor == \"today\") {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(obj.txtWhen).format(dateFormat) == moment().format(\"DD/MM/YYYY\"));\n        } else if (todoSearchFor == \"upcoming\") {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(obj.txtWhen).format(dateFormat) > moment().format(\"DD/MM/YYYY\"));\n        } else {\n            tabTypeBasedData = tabTypeBasedData.filter((obj) => moment(obj.txtWhen).format(dateFormat) < moment().format(\"DD/MM/YYYY\"));\n        }\n        return tabTypeBasedData;\n    }\n\n    //console.log(getDataBasedOnRequestType(tabType,todoSearchFor));\n\n    const tabTypeBasedData = getDataBasedOnRequestType(tabType, todoSearchFor);\n    if (tabTypeBasedData.length > 0) {\n\n        const { count } = props;\n        console.log(props);\n\n        return (\n            //Looping through all data\n            //props.state.allTodoData.map((item, index) =>\n            tabTypeBasedData.map((item, index) =>\n\n                <Grid item xs={12} md={12} key={index.toString()}>\n                    <div className={classes.root}>\n\n                        <BusinessIcon />\n\n                        <div className={classes.content}>\n                            <div className={classes.title}>{item.txtWhatToDo}</div>\n                            <div className={classes.subTitle}>{item.txtWhereToDo}</div>\n                        </div>\n                    </div>\n                </Grid>\n            )\n        );\n    }\n    return <NoDataFound tabType={tabType} />;\n}\n"]},"metadata":{},"sourceType":"module"}